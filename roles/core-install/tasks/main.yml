---

- name: Add "{{ os_group }}" group
  group:
    name: "{{ os_group }}"
    state: present  
  become: yes  

- name: Add "{{ os_user }}" user with the home dir /home/{{ os_user }}/
  user:
    name: "{{ os_user }}"
    group: "{{ os_group }}"
    home: /home/{{ os_user }}/
    shell: /bin/bash
    comment: Splunk User
  become: yes

- name: Create {{ splunk_home }} dir
  file:
    path: "{{ splunk_home }}"
    state: directory
    mode: '0755'  
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes


- name: -TGZ- Check for the presence of /home/{{ os_user }}/{{ splunk_tgz }}
  stat: 
    path: /home/{{ os_user }}/{{ splunk_tgz }}
    get_checksum: yes  
    checksum_algorithm: md5
  register: splunk_tgz_downloaded_flag
  become: yes

- name: -TGZ- Download (wget) {{ splunk_tgz }}
  get_url:
    url: "https://download.splunk.com/products/splunk/releases/{{ splunk_version }}/linux/{{ splunk_tgz }}"
    checksum: "md5:{{ splunk_tgz_checksum }}"
    dest: /home/{{ os_user }}
    mode: '0640'  
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
    timeout: 20
  become: yes
  when: splunk_tgz_downloaded_flag.stat.exists == False and download_tgz_from_splunk_servers 

- name: -TGZ- Upload ./files/{{ splunk_tgz }} (local) to /home/{{ os_user }}/ (remote)
  copy:
    src: "files/{{ splunk_tgz }}"
    dest: /home/{{ os_user }}
    mode: '0640'
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes
  when: splunk_tgz_downloaded_flag.stat.exists == False and not download_tgz_from_splunk_servers  

- name: -TGZ- Extract {{ splunk_tgz }} to {{ splunk_home }} to install
  unarchive:
    src: /home/{{ os_user }}/{{ splunk_tgz }}
    dest: "{{ splunk_base_path }}"
    remote_src: yes
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes

- name: "Create symlink to splunk in /usr/local/bin"
  file:
    src: "{{ splunk_home }}/bin/splunk"
    path: /usr/local/bin/splunk
    state: link
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes


- name: -user-seed.conf- Create file for default admin creds
  template:
    src: user-seed.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/user-seed.conf"
  become: yes

- name: "-.ui_login- Touch {{ splunk_home }}/etc/.ui_login"
  file:
    path: "{{ splunk_home }}/etc/.ui_login"
    state: touch
    mode: '0644'
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes   

- name: -user-prefs.conf- Create file for default user/UI preferences
  template:
    src: user-prefs.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/user-prefs.conf"
  become: yes

- name: -ui-tour.conf- Create file to disable default search tour
  template:
    src: ui-tour.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/ui-tour.conf"
  become: yes

- name: -limits.conf- Set reasonable saved search limits (increased) for ES
  template:
    src: limits.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/limits.conf"
  become: yes 

- name: -web.conf- Create file to disable SSL and set up file for additional adds
  template:
    src: web.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/web.conf"
  become: yes 

- name: -web.conf- Disable auto update checking
  lineinfile:
    path: "{{ splunk_home }}/etc/system/local/web.conf"
    line: updateCheckerBaseURL = 0
    insertafter: '[settings]'
  become: yes
  when: not check_for_updates

- name: -server.conf- Specify the WiredTiger KVstore storage engine in >= 8.1
  template:
    src: server.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/server.conf"
  become: yes 
  when:
    - splunk_version is version('8.1', '>=')

- name: Set {{ splunk_home }} owner & group recursively
  file:
    path: "{{ splunk_home }}"
    state: directory
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
    recurse: yes
  become: yes  

- name: Ensure default Splunk systemd unit file does not already exist
  file:
    path: /etc/systemd/system/Splunkd.service
    state: absent
  become: yes


- name: -initd & Splunk 7.2.1 or earlier- Splunk enable boot-start
  command: "{{ splunk_home }}/bin/splunk enable boot-start -user {{ os_user }} --no-prompt --answer-yes --accept-license"
  become: yes  
  when: 
    - install_method == "initd" 
    - splunk_version is version('7.2.1', '<=')

- name: -initd & Splunk 7.2 or later- Splunk enable boot-start
  command: "{{ splunk_home }}/bin/splunk enable boot-start -systemd-managed 0 -user {{ os_user }} --no-prompt --answer-yes --accept-license"
  become: yes  
  when: 
    - install_method == "initd" 
    - splunk_version is version('7.2.0', '>=')

- name: -initd- Start Splunk for the first time
  command: "{{ splunk_home }}/bin/splunk start --no-prompt --answer-yes --accept-license"
  become: yes  
  when: install_method == "initd"


- name: -systemd & Splunk 7.2.2 to 7.2.x- Splunk enable boot-start (no systemd arguments added)
  command: "{{ splunk_home }}/bin/splunk enable boot-start -user {{ os_user }} --no-prompt --answer-yes --accept-license"
  become: yes  
  when:
    - install_method == "systemd" 
    - splunk_version is version('7.2.2', '>=')
    - splunk_version is version('7.3', '<')

- name: -systemd & Splunk 7.3 to 8.1.0- Splunk enable boot-start (-systemd-managed 1)
  command: "{{ splunk_home }}/bin/splunk enable boot-start -systemd-managed 1 -user {{ os_user }} --no-prompt --answer-yes --accept-license"
  become: yes 
  when:
    - install_method == "systemd" 
    - splunk_version is version('7.3', '>=')
    - splunk_version is version('8.1.1', '<')

- name: -systemd & Splunk 8.1.1 polkit- Install "polkit" for 8.1.1 or later on CentOS, RHEL, and Amazon Linux
  yum:
    name: polkit
    state: latest  
  become: yes
  when: 
    - install_method == "systemd" 
    - splunk_version is version('8.1.1', '>=')
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'Amazon'  

- name: -systemd & Splunk 8.1.1 or later- Splunk enable boot-start (-systemd-managed 1) (-create-polkit-rules 1)
  command: "{{ splunk_home }}/bin/splunk enable boot-start -systemd-managed 1 -create-polkit-rules 1 -user {{ os_user }} --no-prompt --answer-yes --accept-license"
  become: yes 
  when:
    - install_method == "systemd" 
    - splunk_version is version('8.1.1', '>=')

- name: -systemd & Ubuntu- Fix the /etc/systemd/system/Splunkd.service file for Ubuntu support
  replace:
    path: /etc/systemd/system/Splunkd.service
    regexp: '\/init.scope'
    replace: ''
  become: yes 
  when: 
    - install_method == "systemd"  
    - ansible_distribution == "Ubuntu"  

- name: -systemd & Ubuntu- Fix the cgroups path reference in /etc/systemd/system/Splunkd.service (Ubuntu 22.04)
  replace:
    path: /etc/systemd/system/Splunkd.service
    regexp: '\/sys\/fs\/cgroup\/\w+'
    replace: '/sys/fs/cgroup'
  become: yes 
  when: 
    - install_method == "systemd"  
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version >= "22"  

- name: -systemd & Ubuntu- After Splunkd.service update reload the systemd daemon units
  command: systemctl daemon-reload
  become: yes 
  when: 
    - install_method == "systemd"  
    - ansible_distribution == "Ubuntu"    

- name: -systemd- Start Splunk for the first time
  command: "systemctl start Splunkd"
  become: yes
  when: 
    - install_method == "systemd"
